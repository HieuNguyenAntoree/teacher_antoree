
def getVersionCodeTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    def code = formattedDate.toInteger()
    println sprintf("VersionCode: %d", code)
    return code
}

def versionPropsFile = rootProject.file('version.properties')
Properties versionProps = new Properties()

if (versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))
    versionProps.setProperty('VERSION_CODE', getVersionCodeTimestamp().toString())
    versionProps.store(versionPropsFile.newWriter(), null)
}
def appVersionCode = versionProps['VERSION_CODE'].toInteger()

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def betaStagingKeystorePropertiesFile = rootProject.file("keys/keystore-beta-staging.properties")
// Initialize a new Properties() object called keystoreProperties.
def betaStagingKeystoreProperties = new Properties()
// Load your keystore.properties file into the betaStagingKeystoreProperties object.
betaStagingKeystoreProperties.load(new FileInputStream(betaStagingKeystorePropertiesFile))

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def prodKeystorePropertiesFile = rootProject.file("keys/keystore-prod.properties")
// Initialize a new Properties() object called keystoreProperties.
def prodKeystoreProperties = new Properties()
// Load your keystore.properties file into the prodKeystoreProperties object.
prodKeystoreProperties.load(new FileInputStream(prodKeystorePropertiesFile))

android {
    compileSdkVersion 28
    ndkVersion "21.0.6113669"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.antoree.v2"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode appVersionCode
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

            // Add below 3 lines for proguard
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file("keystores/debug.keystore")
            storePassword 'android'
        }

        release {
            keyAlias prodKeystoreProperties['PROD_KEY_ALIAS']
            keyPassword prodKeystoreProperties['PROD_KEY_PASSWORD']
            storeFile file(prodKeystoreProperties['PROD_STORE_FILE'])
            storePassword prodKeystoreProperties['PROD_STORE_PASSWORD']
        }

        betaStaging {
            keyAlias betaStagingKeystoreProperties['STG_BETA_KEY_ALIAS']
            keyPassword betaStagingKeystoreProperties['STG_BETA_KEY_PASSWORD']
            storeFile file(betaStagingKeystoreProperties['STG_BETA_STORE_FILE'])
            storePassword betaStagingKeystoreProperties['STG_BETA_STORE_PASSWORD']
        }
    }


    //environment build
    flavorDimensions "version"
    productFlavors {
        runner {
            dimension "version"
            applicationId rootProject.ext.applicationId
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Antoree Teacher Runnder"
            signingConfig signingConfigs.betaStaging
        }

        dev {
            dimension "version"
            applicationId rootProject.ext.applicationId
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Antoree Teacher Dev"
            signingConfig signingConfigs.betaStaging
        }

        staging {
            dimension "version"
            applicationId rootProject.ext.applicationId
            applicationIdSuffix ".stg"
            resValue "string", "app_name", "Antoree Teacher Stg"
            signingConfig signingConfigs.betaStaging
        }

        beta {
            dimension "version"
            applicationId rootProject.ext.applicationId
            applicationIdSuffix ".beta"
            resValue "string", "app_name", "Antoree Teacher Beta"
            signingConfig signingConfigs.betaStaging
        }

        production {
            dimension "version"
            applicationId rootProject.ext.applicationId
            resValue "string", "app_name", "Antoree Student"
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.android.play:core:1.7.2'
}
